<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:sec="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans-4.3.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd
		http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security-5.2.xsd">
		
	<!-- spring security에서 사용할 AuthenticationProvider를 구현한 클래스를 bean 등록 -->
	<bean id="customAuthProvider" class="com.biz.book.auth.AuthProviderImpl"/>
	
	<!-- 커스터마이징 된 AuthProvider를 spring security에서 사용하도록 sceurity:authentication-manager에 등록 -->
	<sec:authentication-manager>
		<sec:authentication-provider ref="customAuthProvider"/>
	</sec:authentication-manager>

	<!-- spring security의 핵심 설정 부분 -->
	<!-- security:http -->
	<!-- login form을 설정 -->
	<!-- login 방법 설정 -->
	<!-- login이 되었을때 인가, 권한에 관한 설정 -->
	<!-- login이 되었을 때 URL 패턴에 따라 접근 권한을 세밀하게 부여할 수 있다 -->
	<!-- security:intercept 기능이다 -->
	<!-- 접근할 URL을 pattern 속성에 지정하고 접근할 권힌이 있는가를 검사하도록 access 속성에 지정한다-->
	<!-- 패턴지정에서 주의할 사항 -->
	<!-- 패턴은 URL의 단계가 깊을수록 위쪽에 먼저 작성을 해주어야 한다. -->
	<!-- 만약 user/**, user/a/b/c/ 순서로 패턴이 있을 경우 user/a/b/c/는 무시된다 -->
	<!-- 이때는 user/a/b/c, user/** 순서로 패턴을 나열해야 한다 -->
	<sec:http auto-config="true" use-expressions="true">
		<sec:form-login username-parameter="username" password-parameter="password"/>
		<sec:logout logout-url="/logout"/>
		
		<sec:intercept-url pattern="/admin/**" access="hasRole('ADMIN')"/>
		<sec:intercept-url pattern="/member/mypage" access="hasAnyRole('ADMIN','USER')"/>
		<sec:intercept-url pattern="/member/password" access="hasAnyRole('ADMIN','USER')"/>
		<sec:intercept-url pattern="/member/**" access="permitAll()"/>
		<sec:intercept-url pattern="/books/**" access="hasAnyRole('ADMIN','USER')"/>
		<sec:intercept-url pattern="/**" access="permitAll()"/>
		
	</sec:http>
</beans>
